--EXPLORING THE DATA SET 

SELECT * 
FROM [RFM Analysis in SQL]..RMF

SELECT DISTINCT STATUS
FROM [RFM Analysis in SQL]..RMF -- WE CAN USE THIS AS A CATEGORICAL VARIABLE FOR ANALYSIS 

SELECT DISTINCT PRODUCTLINE
FROM [RFM Analysis in SQL]..RMF -- WE CAN ALSO FIND WHICH PRODUCT LINE PRODUCE MORE REVENUES

SELECT DISTINCT DEALSIZE
FROM [RFM Analysis in SQL]..RMF -- WE CAN FIND WAHT IS THE BEST DEAL SIZE TO FOCUS ON IT MORE 

SELECT DISTINCT YEAR_ID
FROM [RFM Analysis in SQL]..RMF -- WE CAN FIND HOW THE SALES CHANGE OVER THE THREE YEARS 

SELECT DISTINCT COUNTRY
FROM [RFM Analysis in SQL]..RMF -- WE CAN FIND THE COUNTRY WITH THE MOST IMPACT ON REVENUE

SELECT DISTINCT TERRITORY
FROM [RFM Analysis in SQL]..RMF

SELECT COUNT(DISTINCT ORDERNUMBER)
FROM [RFM Analysis in SQL]..RMF

-- ANALYSIS OF DATA 
--1 GROUPING SALES BY PRODUCT LINE 

SELECT 
      PRODUCTLINE
      ,SUM(SALES) AS SALES_PER_PRODUCT_LINE
FROM
      [RFM Analysis in SQL]..RMF
GROUP BY
       PRODUCTLINE
ORDER BY 
       SALES_PER_PRODUCT_LINE DESC
-- WE CAN SEE THAT CLASSIC CARS HAS THE MOST SALES 
--2 GROUPING SALES BY YEAR
SELECT 
       YEAR_ID
	   ,SUM(SALES) AS SALES_PER_YEAR
FROM 
      [RFM Analysis in SQL]..RMF
GROUP BY 
       YEAR_ID
ORDER BY 
      SALES_PER_YEAR DESC
-- WE CAN SEE THAT THE YEAR 2004 WAS THE BEST YEAR IN SALES THE THE SALES WAS DECEASED HEAVLYI IN 2005
SELECT MAX(MONTH_ID)
FROM [RFM Analysis in SQL]..RMF
WHERE YEAR_ID = 2005
-- LOOKING FURTHER WE FOUND THAT OUR DATA IS ONLY TO THE FIFTH MONTH OF YEAR 2005 AND NOT THE FULL YEAR 

--3 GROUPING SALES BY STATUS
SELECT 
       STATUS
	   ,SUM(SALES) AS SALES_PER_STATUS
FROM 
      [RFM Analysis in SQL]..RMF
GROUP BY 
       STATUS
ORDER BY 
      SALES_PER_STATUS DESC
-- WE CAN SEE THAT ALOT OF THE SALES WE THINK WE HAVE WAS CANCELLED WE CAN INVESTIGAT TO THAT MUSH MORE 

--4 GROUPING SALES BY DEALSIZE
SELECT 
       DEALSIZE
	   ,SUM(SALES) AS SALES_PER_DEALSIZE
FROM 
      [RFM Analysis in SQL]..RMF
GROUP BY 
       DEALSIZE
ORDER BY 
      SALES_PER_DEALSIZE DESC
-- WE CAN SEE THAT MEDIUM DEAL SIZES GET THE COMPANY THE MOST SALES WE CAN FOCUS MORE ON THAT 

--5 GROUPING SALES BY COUNTRY

SELECT 
       COUNTRY
	   ,SUM(SALES) AS SALES_PER_COUNTRY
FROM 
      [RFM Analysis in SQL]..RMF
GROUP BY 
       COUNTRY
ORDER BY 
      SALES_PER_COUNTRY DESC

-- WE FIND THAT THE USA IS THE MOST COUNTRY OF SALES 

-- 6 BEST MONTH OF SALES EACH YEAR

SELECT 
       MONTH_ID
	   ,COUNT(ORDERNUMBER) AS FREQUENCY_OF_ORDERS
	   ,SUM(SALES) AS SALES_PER_MONTH
FROM 
      [RFM Analysis in SQL]..RMF
WHERE YEAR_ID = 2004 -- CHANGE THE YEAR TO SEE THE SPECIFICLY 
GROUP BY 
	   MONTH_ID

ORDER BY SALES_PER_MONTH DESC

-- FROM THIS ANALYSIS WE FIND THAT NOVAMBER IS THE MONTH WITH THE MOST ORDERS AND SALES

-- WHAT PRODUCT PRODUCE THE MOST SALES IN NOVAMBER 

SELECT 
   PRODUCTLINE
   ,SUM(SALES) TOTAL_SALES
   ,COUNT(ORDERNUMBER) TOTAL_NUMBER_OF_ORDERS
FROM 
     [RFM Analysis in SQL]..RMF
WHERE MONTH_ID = 11
GROUP BY 
     PRODUCTLINE
ORDER BY 
    SUM(SALES) DESC
   ,COUNT(ORDERNUMBER)

-- SO AS EXPECTED CLASSIC CARS IS THE PRODUCT WITH THE MOST SALES BY FAR 
   
-- WHO IS THE BEST CUSTOMER (RMF ANALYSIS)
--RMF ANALYSIS IS A WAY OF SEGMENTING CUSTOMERS USING THREE METRICS 

--1 HOW LONG AGO WAS THEIR LAST PERCHASE 
--2 HOW OFFTEN THEY PERCHASED
--3 HOW MUCH THEY SPENT  

DROP TABLE IF EXISTS #RMF_ANALYSIS_TABLE
WITH CUSTOMERS_ANALYSIS AS 
(
SELECT 
       CUSTOMERNAME
       ,SUM(SALES) AS TOTAL_SALES
	   ,AVG(SALES) AS AVG_SALES
       ,COUNT( ORDERNUMBER) AS FREQUENCY 
       ,MAX(ORDERDATE) AS LAST_ORDER
	   ,(SELECT MAX(ORDERDATE) FROM [RFM Analysis in SQL]..RMF) AS MAX_ORDER_DATE
	   ,DATEDIFF(DD,MAX(ORDERDATE),(SELECT MAX(ORDERDATE) FROM [RFM Analysis in SQL]..RMF)) AS RECENCY
FROM   
      [RFM Analysis in SQL]..RMF
GROUP BY 
     CUSTOMERNAME
 ),RMF_CALC AS (
 SELECT * 
  ,NTILE(4) OVER(ORDER BY RECENCY DESC) AS RMF_RECENCY
  ,NTILE(4) OVER(ORDER BY FREQUENCY ) AS RMF_FREQUENCY
  ,NTILE(4) OVER(ORDER BY TOTAL_SALES ) AS RMF_TOTAL_SALES
 FROM CUSTOMERS_ANALYSIS
     )
SELECT 
*
,(RMF_RECENCY+RMF_FREQUENCY+RMF_TOTAL_SALES) AS  CUSTOMER_SCORE 
,(CAST(RMF_RECENCY AS varchar)+CAST(RMF_FREQUENCY AS varchar)+CAST(RMF_TOTAL_SALES AS varchar)) AS RMF_STRING
INTO #RMF_ANALYSIS_TABLE
FROM RMF_CALC
ORDER BY CUSTOMER_SCORE DESC

--customer segmenting by importanc level and loyalty
SELECT TOP(92) *,
CASE WHEN CUSTOMER_SCORE BETWEEN 3 AND 6 THEN 'LOW_LEVEL_CUSTOMER'
WHEN CUSTOMER_SCORE BETWEEN 6 AND 9 THEN 'MIDDEL_LEVEL_CUSTOMER'
ELSE 'TOP_LEVEL_CUSTOMER'
END AS CUSTOMERS_CATEGORY
,
CASE WHEN RMF_STRING IN (111,112,121,122,123,132,211,212,114,141,144,221) THEN 'Lost_customer'
when RMF_STRING IN (133,134,143,244,334,343,344,232) THEN 'Sliping away'
when RMF_STRING IN (311,411,331,322,421) then 'new_customer'
when RMF_STRING IN (222,223,233,332,234) then 'potential churners'
when RMF_STRING IN (323,333,321,422,332,432,423) then 'Active'
when RMF_STRING IN (433,432,443,444,434) then 'loyal'
end as loyalty_level

FROM #RMF_ANALYSIS_TABLE
ORDER BY CUSTOMER_SCORE DESC

--***
select 
         customername
		  ,RMF_RECENCY
		  ,RMF_FREQUENCY
		  ,RMF_TOTAL_SALES
		  ,CASE WHEN CUSTOMER_SCORE BETWEEN 3 AND 6 THEN 'LOW_LEVEL_CUSTOMER'
WHEN CUSTOMER_SCORE BETWEEN 6 AND 9 THEN 'MIDDEL_LEVEL_CUSTOMER'
ELSE 'TOP_LEVEL_CUSTOMER'
END AS CUSTOMERS_CATEGORY
,
CASE WHEN RMF_STRING IN (111,112,121,122,123,132,211,212,114,141,144,221) THEN 'Lost_customer'
when RMF_STRING IN (133,134,143,244,334,343,344,232) THEN 'Sliping away'
when RMF_STRING IN (311,411,331,322,421,141) then 'new_customer'
when RMF_STRING IN (222,223,233,332,234) then 'potential churners'
when RMF_STRING IN (323,333,321,422,332,432,423) then 'Active'
when RMF_STRING IN (433,432,443,444,434) then 'loyal'
end as loyalty_level

from #RMF_ANALYSIS_TABLE



-- WHAT PRODUCTS MOST OFtTEN SELLS TOGETHER


select * 
from 
(
select  DISTINCT ORDERNUMBER,stuff
(

(select 
     ' and '+PRODUCTCODE
FROM 
      [RFM Analysis in SQL].dbo.RMF AS T1
WHERE ORDERNUMBER IN
( 
select ORDERNUMBER
from (
SELECT  ORDERNUMBER,COUNT(*) AS RN
FROM [RFM Analysis in SQL].dbo.RMF
where STATUS = 'Shipped'
GROUP BY ORDERNUMBER
) as c
WHERE RN = 2) and t1.ORDERNUMBER=t2.ORDERNUMBER
-- AND T1.ORDERLINENUMBER=T2.ORDERLINENUMBER
FOR XML PATH ('')),1,4,'') as product_codes

FROM [RFM Analysis in SQL].dbo.RMF AS T2

) zz 
where product_codes is not null 

